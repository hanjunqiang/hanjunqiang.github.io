<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[UITableView常见操作]]></title>
      <url>/2017/09/26/UITableView/</url>
      <content type="html"><![CDATA[<blockquote>
<h5 id="方法一：设置section中title（颜色）以及所在view的背景色"><a href="#方法一：设置section中title（颜色）以及所在view的背景色" class="headerlink" title="方法一：设置section中title（颜色）以及所在view的背景色"></a>方法一：设置section中title（颜色）以及所在view的背景色</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#1，设置section中title（颜色）以及所在view的背景色</span></div><div class="line">-(<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView willDisplayHeaderView:(<span class="built_in">UIView</span> *)view forSection:(<span class="built_in">NSInteger</span>)section</div><div class="line"></div><div class="line">&#123;</div><div class="line">    </div><div class="line">    <span class="built_in">UITableViewHeaderFooterView</span> *header = (<span class="built_in">UITableViewHeaderFooterView</span> *)view;</div><div class="line">    </div><div class="line">    header.textLabel.textColor = [<span class="built_in">UIColor</span> redColor];</div><div class="line">    </div><div class="line">    header.contentView.backgroundColor = [<span class="built_in">UIColor</span> yellowColor];</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法二：索引的颜色以及背景色"><a href="#方法二：索引的颜色以及背景色" class="headerlink" title="方法二：索引的颜色以及背景色"></a>方法二：索引的颜色以及背景色</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">更改索引的背景颜色:</div><div class="line"></div><div class="line"><span class="keyword">self</span>.tableView.sectionIndexBackgroundColor = [<span class="built_in">UIColor</span> clearColor]; </div><div class="line">更改索引的文字颜色:</div><div class="line"></div><div class="line"><span class="keyword">self</span>.tableView.sectionIndexColor = [<span class="built_in">UIColor</span> blueColor];</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法三：分割线到头"><a href="#方法三：分割线到头" class="headerlink" title="方法三：分割线到头"></a>方法三：分割线到头</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">        <span class="comment">//分割线</span></div><div class="line"><span class="comment">//        [cell setSeparatorInset:UIEdgeInsetsZero];</span></div><div class="line"><span class="comment">//        [cell setPreservesSuperviewLayoutMargins:NO];</span></div><div class="line"><span class="comment">//        [cell setLayoutMargins:UIEdgeInsetsZero];</span></div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法四：侧滑删除"><a href="#方法四：侧滑删除" class="headerlink" title="方法四：侧滑删除"></a>方法四：侧滑删除</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark - TableView代理方法</span></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 只要实现这个方法，左划cell出现删除按钮的功能就有了</span></div><div class="line"><span class="comment"> * 用户提交了添加（点击了添加按钮）\删除（点击了删除按钮）操作时会调用</span></div><div class="line"><span class="comment"> */</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView commitEditingStyle:(<span class="built_in">UITableViewCellEditingStyle</span>)editingStyle forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (editingStyle == <span class="built_in">UITableViewCellEditingStyleDelete</span>) &#123;  <span class="comment">// 点击了“删除”</span></div><div class="line">        <span class="comment">// 删除模型</span></div><div class="line">        [<span class="keyword">self</span>.deals removeObjectAtIndex:indexPath.row];</div><div class="line">        </div><div class="line">        <span class="comment">// 刷新表格</span></div><div class="line">        [<span class="keyword">self</span>.tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:<span class="built_in">UITableViewRowAnimationLeft</span>];</div><div class="line">        </div><div class="line"></div><div class="line">    &#125; </div><div class="line">        <span class="comment">//开启编辑模式指定返回编辑类型为UITableViewCellEditingStyleInsert，点击+会走这里</span></div><div class="line">        <span class="comment">//else if (editingStyle == UITableViewCellEditingStyleInsert) &#123; // 点击了+</span></div><div class="line">        <span class="comment">//NSLog(@"+++++ %zd", indexPath.row);</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//该方法返回的是你左滑时候出现的文字提示。</span></div><div class="line">-(<span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="string">@"删除"</span>;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="tableview系统侧滑删除按钮修改"><a href="#tableview系统侧滑删除按钮修改" class="headerlink" title="tableview系统侧滑删除按钮修改"></a>tableview系统侧滑删除按钮修改</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="number">81</span>,tableview系统侧滑删除按钮修改</div><div class="line"></div><div class="line"><span class="comment">//在自定义的cell中，重写该方法。</span></div><div class="line">- (<span class="keyword">void</span>)layoutSubviews&#123;</div><div class="line">    [<span class="keyword">super</span> layoutSubviews];</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">UIView</span> *subView <span class="keyword">in</span> <span class="keyword">self</span>.subviews) &#123;</div><div class="line">        <span class="keyword">if</span>([subView isKindOfClass:<span class="built_in">NSClassFromString</span>(<span class="string">@"UITableViewCellDeleteConfirmationView"</span>)]) &#123;</div><div class="line">            <span class="comment">// 拿到subView之后再获取子控件</span></div><div class="line">            <span class="built_in">UIView</span> *deleteConfirmationView = subView.subviews[<span class="number">0</span>];</div><div class="line">            <span class="keyword">for</span> (<span class="built_in">UIView</span> *deleteView <span class="keyword">in</span> deleteConfirmationView.subviews) &#123;</div><div class="line">                <span class="built_in">UIImageView</span> *deleteImage = [[<span class="built_in">UIImageView</span> alloc] init];</div><div class="line">                deleteImage.contentMode = <span class="built_in">UIViewContentModeScaleAspectFit</span>;</div><div class="line">                <span class="comment">//Delete为图片</span></div><div class="line">                deleteImage.image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"Delete"</span>];</div><div class="line">                deleteImage.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, deleteView.frame.size.width, deleteView.frame.size.height);</div><div class="line">                [deleteView addSubview:deleteImage];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="编辑模式（新增或者删除）"><a href="#编辑模式（新增或者删除）" class="headerlink" title="编辑模式（新增或者删除）"></a>编辑模式（新增或者删除）</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-e5c4c93d6c0e4c55.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入编辑模式的点方法为：self.tableView.editing = YES;
注意:另一种set方法为：[self.tableView setEditing:!self.tableView.isEditing animated:YES];
区别：set方法可以设置是否添加动画效果，体验更好。"></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#点击左侧的+或-，会走上面的commitEditingStyle方法。</span></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 这个方法决定了编辑模式时，每一行的编辑类型：insert（+按钮）、delete（-按钮）</span></div><div class="line"><span class="comment"> */</span></div><div class="line">- (<span class="built_in">UITableViewCellEditingStyle</span>)tableView:(<span class="built_in">UITableView</span> *)tableView editingStyleForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line">    <span class="comment">//偶数行：增加    奇数行：删除</span></div><div class="line">    <span class="keyword">return</span> indexPath.row % <span class="number">2</span> == <span class="number">0</span>? <span class="built_in">UITableViewCellEditingStyleInsert</span> : <span class="built_in">UITableViewCellEditingStyleDelete</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法五：cell的选中样式"><a href="#方法五：cell的选中样式" class="headerlink" title="方法五：cell的选中样式"></a>方法五：cell的选中样式</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-6930ecffb46cbdc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<blockquote>
<h5 id="方法六：cell自适应高度之：cell调用方法的顺序"><a href="#方法六：cell自适应高度之：cell调用方法的顺序" class="headerlink" title="方法六：cell自适应高度之：cell调用方法的顺序"></a>方法六：cell自适应高度之：cell调用方法的顺序</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>,先调用多次这个方法。-(<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line"><span class="number">2</span>,- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line"><span class="meta">#按照1、2的顺序，我们就在heightForRowAtIndexPath中拿不到Cell中计算的高度了。</span></div><div class="line"></div><div class="line"><span class="meta">#解决方案：</span></div><div class="line"></div><div class="line"><span class="comment">//前提：</span></div><div class="line"><span class="meta">#要使用iOS6.0中的dequeueReusableCellWithIdentifier:方法，不注册的话需要判断cell是否为空。</span></div><div class="line">使用dequeueReusableCellWithIdentifier:</div><div class="line">forIndexPath:方法，一定会返回单元格，不用判断cell是否为空。如果不存在，会自动帮我们创建。但是呢，有个弊端，使用这个方法加上下面的预估高度方法，还是会先走heightForRowAtIndexPath方法然后走cellForRowAtIndexPath方法。</div><div class="line"></div><div class="line"><span class="comment">//步骤</span></div><div class="line"><span class="meta">#1，加上个预估高度，使用estimatedRowHeight属性设置（推荐）或者使用代理方法estimatedHeightForRowAtIndexPath。。</span></div><div class="line"><span class="meta">#2，加上预估高度方法，这样系统会先走这个方法，系统知道有个大概高度，就会先走cellForRowAtIndexPath方法，最后再走heightForRowAtIndexPath方法返回准确的高度。</span></div></pre></td></tr></table></figure>
<hr>
<blockquote>
<h5 id="方法七：为什么需要强制布局然后再获取最下面一个控件的高度？"><a href="#方法七：为什么需要强制布局然后再获取最下面一个控件的高度？" class="headerlink" title="方法七：为什么需要强制布局然后再获取最下面一个控件的高度？"></a>方法七：为什么需要强制布局然后再获取最下面一个控件的高度？</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">虽然先走的cellForRowAtIndexPath方法，然后再走heightForRowAtIndexPath。</div><div class="line">但是呢，cellForRowAtIndexPath方法中的cell内容可能还没有加载完数据，</div><div class="line">这时就已经走heightForRowAtIndexPath方法，导致高度不正确。</div><div class="line"></div><div class="line"><span class="meta">#解决方案:</span></div><div class="line"><span class="meta">#在cellforrow中model的set方法中，cell强制布局一下，</span></div><div class="line"><span class="meta">#然后再获取cell最下面一个控件的高度，然后记录到model中</span></div><div class="line"><span class="meta">#[cell layoutIfNeeded];//强制布局</span></div><div class="line"><span class="meta">#status.cellHeight = CGRectGetMaxY(self.jq_contentlbl.frame);//获取并记录高度</span></div><div class="line"><span class="meta">#注意：强制布局是UI界面上的布局所以不会耗性能。</span></div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为："><a href="#方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为：" class="headerlink" title="方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为："></a>方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为：</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">heightForHeaderInSection、heightForFooterInSection、heightForRowAtIndexPath中不能返回<span class="number">0</span>或者<span class="number">0.0</span>。</div><div class="line"><span class="meta">#至少要有值，比如：0.01</span></div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。"><a href="#方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。" class="headerlink" title="方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。"></a>方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#设置tableview的头部和尾部：应该使用懒加载的方式展示头部或者尾部view，</span></div><div class="line">不然，每次滚动的时候都会重新创建，这样就会卡顿，耗性能。</div><div class="line"></div><div class="line"><span class="meta">#设置section的头部和尾部view，应该每次都需要创建，</span></div><div class="line">因为每个section都有头部和尾部view，内部会自动复用！</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法十：删除前两条数据"><a href="#方法十：删除前两条数据" class="headerlink" title="方法十：删除前两条数据"></a>方法十：删除前两条数据</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-18d0b92ab3c216e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<blockquote>
<h5 id="方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。"><a href="#方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。" class="headerlink" title="方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。"></a>方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-f16333f8189f95cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="方法十二："></p>
<blockquote>
<h5 id="方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。"><a href="#方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。" class="headerlink" title="方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。"></a>方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。</h5></blockquote>
<hr>
<blockquote>
<h5 id="方法十四：关闭tableview的弹性"><a href="#方法十四：关闭tableview的弹性" class="headerlink" title="方法十四：关闭tableview的弹性"></a>方法十四：关闭tableview的弹性</h5><pre><code>self.myTableView.bounces = false;
</code></pre></blockquote>
<hr>
<blockquote>
<h5 id="方法十五：使用storyboard注意点："><a href="#方法十五：使用storyboard注意点：" class="headerlink" title="方法十五：使用storyboard注意点："></a>方法十五：使用storyboard注意点：</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>，背景图是一张图片时候，图片不能太大，如果太大，而且使用了自动布局，那么cell的高度就会适应图片的大小，导致cell高度不准确。</div><div class="line"><span class="number">2</span>，storyboard中的tableview或者其他控件一定要拖拽，而且保证拖拽的线是对的，否则可能会自动识别到别的sb中，还不报错，我擦，无语。</div></pre></td></tr></table></figure>
</blockquote>
<hr>
<blockquote>
<h4 id="方法十六：点击cell中的按钮，触发一些操作"><a href="#方法十六：点击cell中的按钮，触发一些操作" class="headerlink" title="方法十六：点击cell中的按钮，触发一些操作"></a>方法十六：点击cell中的按钮，触发一些操作</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">注意：虽然点击cell中的按钮，但是还是会走cellForRowAtIndexPath方法，而且model也就是点击按钮所在的行的model。</div><div class="line">所以，除非要用cell中控件，那么我们可以直接在按钮的点击事件中操作当前行的model即可。</div></pre></td></tr></table></figure>
</blockquote>
<hr>
<blockquote>
<h4 id="方法十七：cell显示全部和展示部分"><a href="#方法十七：cell显示全部和展示部分" class="headerlink" title="方法十七：cell显示全部和展示部分"></a>方法十七：cell显示全部和展示部分</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">之前可能已经提到过，点击cell中的按钮，会走cellforrow方法，也就是当前点击按钮所在的cell，那么只需要写个block回调就可以了。</div></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-bedf76368e23faad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="showBtnMethod：就是按钮的点击方法"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-97eac12a0182a4c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cellForRowAtIndexPath：方法"></p>
]]></content>
      
        <categories>
            
            <category> oc语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> object-c </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/09/26/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
