<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[office2016 for Mac破解工具]]></title>
      <url>/2017/10/09/office2016-for-Mac%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="1-下载2016正版office安装。"><a href="#1-下载2016正版office安装。" class="headerlink" title="1,下载2016正版office安装。"></a>1,下载2016正版office安装。</h3></blockquote>
<hr>
<blockquote>
<h3 id="2，下载破解工具-链接-http-pan-baidu-com-s-1i5CaSw1-密码-hkp6"><a href="#2，下载破解工具-链接-http-pan-baidu-com-s-1i5CaSw1-密码-hkp6" class="headerlink" title="2，下载破解工具 链接:http://pan.baidu.com/s/1i5CaSw1  密码:hkp6"></a>2，下载破解工具<br> 链接:<a href="http://pan.baidu.com/s/1i5CaSw1" target="_blank" rel="external">http://pan.baidu.com/s/1i5CaSw1</a>  密码:hkp6</h3></blockquote>
<hr>
<blockquote>
<h3 id="3-打开破解工具，解锁，重启office软件即可。"><a href="#3-打开破解工具，解锁，重启office软件即可。" class="headerlink" title="3,打开破解工具，解锁，重启office软件即可。"></a>3,打开破解工具，解锁，重启office软件即可。</h3></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-73d2c0377e876aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
]]></content>
      
        <categories>
            
            <category> Mac软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mac软件(破解) </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[swift疑惑]]></title>
      <url>/2017/10/09/swift%E7%96%91%E6%83%91/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="1-数组和字典的增删改查"><a href="#1-数组和字典的增删改查" class="headerlink" title="1. 数组和字典的增删改查"></a>1. 数组和字典的增删改查</h3></blockquote>
<hr>
<blockquote>
<h3 id="✅2-switch中满足一个条件，不然他break，继续判断后面的条件，添加fallthrough，但是不能跟case为赋值另一个变量的形式。"><a href="#✅2-switch中满足一个条件，不然他break，继续判断后面的条件，添加fallthrough，但是不能跟case为赋值另一个变量的形式。" class="headerlink" title="✅2. switch中满足一个条件，不然他break，继续判断后面的条件，添加fallthrough，但是不能跟case为赋值另一个变量的形式。"></a>✅2. switch中满足一个条件，不然他break，继续判断后面的条件，添加fallthrough，但是不能跟case为赋值另一个变量的形式。</h3></blockquote>
]]></content>
      
        <categories>
            
            <category> Swift3.0语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> swift疑惑 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Swift3.0基础]]></title>
      <url>/2017/10/09/Swift3-0%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<blockquote>
<h1 id="1，注意点"><a href="#1，注意点" class="headerlink" title="1，注意点"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">1，注意点</font></td></tr></table></h1></blockquote>
<ul>
<li><font color="red" size="4" face="Weibei SC">编写代码的时候，一定要养成良好的编程习惯，该有空格的时候一定要有，不该有空格的时候一定不要有（不然可能会报错）</font>

</li>
</ul>
<blockquote>
<h1 id="2，基础类型转字符串"><a href="#2，基础类型转字符串" class="headerlink" title="2，基础类型转字符串"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">2，基础类型转字符串</font></td></tr></table></h1></blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>, <span class="type">String</span>(width)</div><div class="line"><span class="number">2</span>, <span class="string">"\(20)"</span></div></pre></td></tr></table></figure>
<blockquote>
<h1 id="3，字典"><a href="#3，字典" class="headerlink" title="3，字典"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">3，字典</font></td></tr></table></h1></blockquote>
<ul>
<li><p><font color="red" size="4" face="Weibei SC">①初始化方法</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//初始化字典</span></div><div class="line"><span class="keyword">var</span> ageDict = [<span class="type">String</span>:<span class="type">Any</span>]()</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC"> ②错误1，字典中既有字符串，又有整型。</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//错误示例</span></div><div class="line"><span class="keyword">var</span> occupations = [</div><div class="line">    <span class="string">"Malcolm"</span> : <span class="string">"Captain"</span>,</div><div class="line">    <span class="string">"age"</span>: <span class="number">12</span></div><div class="line">]<span class="comment">//这里也不能用@12  </span></div><div class="line">---</div><div class="line">✅ 解决方式<span class="number">1</span>，结尾添加<span class="keyword">as</span> [<span class="type">String</span> : <span class="type">Any</span>]</div><div class="line">    <span class="keyword">var</span> occupations = [</div><div class="line">      <span class="string">"name"</span> : <span class="string">"Mr.han"</span>,</div><div class="line">      <span class="string">"age"</span> : <span class="number">12</span></div><div class="line">    ] <span class="keyword">as</span> [<span class="type">String</span> : <span class="type">Any</span>]</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<h1 id="4，数组"><a href="#4，数组" class="headerlink" title="4，数组"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">4，数组</font></td></tr></table></h1></blockquote>
<ul>
<li><p><font color="red" size="4" face="Weibei SC"> ①数组初始化方法</font></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//初始化数组</div><div class="line">var shoppingList = [Any]()</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC"> ②数组和元组的区别</font></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//区别一</div><div class="line">1,数组[1,2,3,4,5]</div><div class="line">2,元组(1,2,3,4,5)</div><div class="line"></div><div class="line">//区别二(取值)</div><div class="line">数组array[0]</div><div class="line">元组array.0</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<h1 id="5，控制流"><a href="#5，控制流" class="headerlink" title="5，控制流"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">5，控制流</font></td></tr></table></h1></blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">     控制流</span></div><div class="line"><span class="comment">     1，使用if和switch来进行条件操作，使用for-in、for、while和repeat-while来进行循环</span></div><div class="line"><span class="comment">     注：包裹条件和循环变量可以省略，但是语句体的大括号是必须的。</span></div><div class="line"><span class="comment"> */</span></div></pre></td></tr></table></figure>
<ul>
<li><p><font color="red" size="4" face="Weibei SC">① for in</font></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"> /*</div><div class="line">     1，使用for-in 来遍历字典，需要两个变量来表示每个键值对。(kind和numbers)</div><div class="line">     2，字典是一个无序的集合，所以他们的键和值一任意顺序迭代结束</div><div class="line"> */</div><div class="line"></div><div class="line">let intestingNumbers = [</div><div class="line">    &quot;counts1&quot; : [1,2,3,4],</div><div class="line">    &quot;counts2&quot; : [5,6,7,8],</div><div class="line">    &quot;counts3&quot; : [9,10,11,12],</div><div class="line">]</div><div class="line"></div><div class="line">//从输出可以看出字典输出是无序的</div><div class="line">intestingNumbers</div><div class="line"></div><div class="line">for (kind,numbers) in intestingNumbers &#123;</div><div class="line">//只是单纯的输出kind和numbers，那么将展示最后一个键值对</div><div class="line">//    kind</div><div class="line">//    numbers</div><div class="line">    </div><div class="line">//    print(kind)</div><div class="line">//    print(numbers)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">② while和repeat-while</font></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">     1，while来重复执行一段代码知道不满足条件</div><div class="line">     2，repeat-while至少执行一次（替代do-while）</div><div class="line"> */</div><div class="line"></div><div class="line">var n = 2</div><div class="line">while n&lt;100 &#123;</div><div class="line">    n = n * 2</div><div class="line">&#125;</div><div class="line">//print(n) //128</div><div class="line"></div><div class="line">repeat&#123;</div><div class="line">    n = n * 2</div><div class="line">&#125;while n&lt;100</div><div class="line">//print(n) //256</div><div class="line"></div><div class="line"></div><div class="line">/*</div><div class="line">     在循环中使用</div><div class="line">     ..&lt; 表示范围(左闭右开)</div><div class="line">     ... 表示范围(左闭右闭)</div><div class="line"> */</div><div class="line">var total = 0</div><div class="line">for i in 0...4 &#123;</div><div class="line">    total += i</div><div class="line">&#125;</div><div class="line">total</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">③ switch用法</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">     &gt;1,switch支持任意类型的数据以及各种比较操作--不仅仅是整数以及测试相等</span></div><div class="line"><span class="comment"> </span></div><div class="line"><span class="comment">     &gt;2,fallthrough:满足一个条件后，继续判断后面的条件时，在满足的条件后面添加fallthrough</span></div><div class="line"><span class="comment">     注意使用fallthrough，下面的case条件不能为下面这种形式，case let x where x.hasPrefix("red"):</span></div><div class="line"><span class="comment">     不然报错（error: 'fallthrough' cannot transfer control to a case label that declares variables）</span></div><div class="line"><span class="comment"> </span></div><div class="line"><span class="comment">     &gt;3,如果满足了条件，不执行任何操作，不能什么都不写，会报错。</span></div><div class="line"><span class="comment">     可以添加“空语句”</span></div><div class="line"><span class="comment">         →1, break</span></div><div class="line"><span class="comment">         →2, () //旧版本为():</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">let</span> vegetable = <span class="string">"red pepper"</span></div><div class="line"><span class="keyword">switch</span> vegetable &#123;</div><div class="line"><span class="keyword">case</span> <span class="string">"celery"</span>:</div><div class="line">    <span class="built_in">print</span>(<span class="string">"hehe"</span>)</div><div class="line"><span class="keyword">case</span> <span class="string">"red pepper"</span>:</div><div class="line">    <span class="built_in">print</span>(<span class="string">"good"</span>)</div><div class="line">    <span class="keyword">fallthrough</span> <span class="comment">//下一个case，不能使用下面的形式。</span></div><div class="line">    </div><div class="line"><span class="comment">//    case let x where x.hasPrefix("red"):</span></div><div class="line"><span class="comment">//    print("This is")</span></div><div class="line"><span class="keyword">default</span>:</div><div class="line"><span class="comment">//    print("sorry")</span></div><div class="line">    () <span class="comment">//空语句</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<h1 id="6，值缺失"><a href="#6，值缺失" class="headerlink" title="6，值缺失"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">6，值缺失</font></td></tr></table></h1></blockquote>
<ul>
<li><p><font color="red" size="4" face="Weibei SC">① ?的用法（值缺失）</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> optionalName:<span class="type">String</span>? = <span class="string">"Mr.han"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> optionalName != <span class="literal">nil</span> &#123;</div><div class="line">    optionalName <span class="comment">//之前好像不能在这里调用optionalName，采用的是下面的方式调用。</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="keyword">let</span> pName = optionalName &#123; <span class="comment">//这里我们可以再声明一个变量来接收optionalName</span></div><div class="line">    pName</div><div class="line">    optionalName</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">② ??的用法（如果值缺失，使用默认值代替）</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> nickName:<span class="type">String</span>? = <span class="literal">nil</span></div><div class="line"><span class="keyword">let</span> fullName:<span class="type">String</span> = <span class="string">"mrhan"</span></div><div class="line"><span class="keyword">let</span> infomalGreeting = <span class="string">"Hi \(nickName ?? fullName)"</span> <span class="comment">//如果nickName缺失的话，那么fullName就会替代它</span></div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<h1 id="7，函数"><a href="#7，函数" class="headerlink" title="7，函数"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">7，函数</font></td></tr></table></h1></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1，使用func来声明一个函数，使用函数名和参数名来调用函数。</div><div class="line">2，使用-&gt;来指定函数返回值的类型</div></pre></td></tr></table></figure>
<ul>
<li><p><font color="red" size="4" face="Weibei SC">示例1</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">greet</span><span class="params">(name:String, day:String)</span></span> -&gt; <span class="type">String</span>&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="string">"Hello \(name), today is \(day)"</span></div><div class="line">&#125;</div><div class="line">greet(name: <span class="string">"mrhan"</span>, day: <span class="string">"12.14"</span>)</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">示例2</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*②</span></div><div class="line"><span class="comment">     1, 使用元组来让一个函数返回多个值。取值时该元组的元素可以用名称或者数字来表示。</span></div><div class="line"><span class="comment">     注意：如果返回值写成[Int],return的时候,写成return [min,max,sum]</span></div><div class="line"><span class="comment"> </span></div><div class="line"><span class="comment">     2,由1可知，数组和元组的区别</span></div><div class="line"><span class="comment">         →1，括号 (中括号 和 括号)</span></div><div class="line"><span class="comment">         →2，取值（array[0] 和 array.0）</span></div><div class="line"><span class="comment"> </span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">calculate</span><span class="params">(scores:[Int])</span></span> -&gt; (<span class="built_in">min</span>:<span class="type">Int</span>, <span class="built_in">max</span>:<span class="type">Int</span>, sum:<span class="type">Int</span>)&#123;</div><div class="line">    </div><div class="line">    <span class="keyword">var</span> <span class="built_in">min</span> = scores[<span class="number">0</span>]</div><div class="line">    <span class="keyword">var</span> <span class="built_in">max</span> = scores[<span class="number">0</span>]</div><div class="line">    <span class="keyword">var</span> sum = <span class="number">0</span></div><div class="line">    scores[<span class="number">0</span>]</div><div class="line">    <span class="keyword">for</span> score <span class="keyword">in</span> scores&#123;</div><div class="line">        <span class="keyword">if</span> <span class="built_in">min</span> &gt; score&#123;</div><div class="line">            <span class="built_in">min</span> = score</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">max</span> &lt; score&#123;</div><div class="line">            <span class="built_in">max</span> = score</div><div class="line">        &#125;</div><div class="line">        sum += score</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> (<span class="built_in">min</span>,<span class="built_in">max</span>,sum)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">示例3</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*③</span></div><div class="line"><span class="comment">     函数可以带有可变个数的参数，这些参数在函数内表现为数组的形式，但是不能直接传数组。</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumOf</span><span class="params">(numbers:Int...)</span></span> -&gt; <span class="type">Int</span>&#123;</div><div class="line">    <span class="keyword">var</span> sum = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers &#123;</div><div class="line">        sum += number</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> sum</div><div class="line">&#125;</div><div class="line"></div><div class="line">sumOf(numbers: <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) <span class="comment">//这里不能传数组</span></div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">示例4</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*④</span></div><div class="line"><span class="comment">     函数可以嵌套，被嵌套的函数可以访问外侧函数的变量（比如重构一个太长或复杂的函数）</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">returnFifteen</span><span class="params">()</span></span> -&gt; <span class="type">Int</span>&#123;</div><div class="line">    <span class="keyword">var</span> y = <span class="number">10</span></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">()</span></span>&#123;</div><div class="line">        y += <span class="number">5</span></div><div class="line">    &#125;</div><div class="line">    add()</div><div class="line">    <span class="keyword">return</span> y</div><div class="line">&#125;</div><div class="line">returnFifteen()</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">示例5</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*⑤</span></div><div class="line"><span class="comment">     函数是第一等类型，这意味着函数可以作为另一个函数的返回值</span></div><div class="line"><span class="comment"> </span></div><div class="line"><span class="comment">     解析：((Int) -&gt; Int)</span></div><div class="line"><span class="comment">     1，第一个(Int)表示的是addOne传入的参数，而且必须要加括号</span></div><div class="line"><span class="comment">     2，第二个Int表示addOne返回值Int</span></div><div class="line"><span class="comment">     结论：可以使用一个函数的参数和返回值表示一个函数</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeIncrementer</span><span class="params">()</span></span> -&gt; ((<span class="type">Int</span>) -&gt; <span class="type">Int</span>)&#123; <span class="comment">//这里第一个Int必须带括号，</span></div><div class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addOne</span><span class="params">(number:Int)</span></span> -&gt; <span class="type">Int</span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span> + number</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> addOne</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> increment = makeIncrementer()</div><div class="line">increment(<span class="number">7</span>)</div></pre></td></tr></table></figure>
</li>
<li><p><font color="red" size="4" face="Weibei SC">示例6</font></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*⑥</span></div><div class="line"><span class="comment">     函数也可以当做参数传入另一个函数，注意只传函数名，不需要传参数。</span></div><div class="line"><span class="comment">     体会下⑤中的结论：可以使用一个函数的参数和返回值表示一个函数</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">hasAnyMatches</span><span class="params">(list:[Int], condition:<span class="params">(Int)</span></span></span> -&gt; <span class="type">Bool</span>) -&gt; <span class="type">Bool</span>&#123;</div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list&#123;</div><div class="line">        <span class="keyword">if</span> condition(item) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span> <span class="comment">//只要有一个满足就为true</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">lessThanTen</span><span class="params">(number:Int)</span></span> -&gt; <span class="type">Bool</span>&#123;</div><div class="line">    <span class="keyword">return</span> number &lt; <span class="number">10</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> numbers = [<span class="number">20</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">12</span>]</div><div class="line">hasAnyMatches(list: numbers, condition: lessThanTen)</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<h1 id="8，闭包"><a href="#8，闭包" class="headerlink" title="8，闭包"></a><table><tr><td bgcolor="orange"><font color="white" size="6" face="Weibei SC">8，闭包</font></td></tr></table></h1></blockquote>
<ul>
<li><font color="red" size="4" face="Weibei SC">Swift闭包</font>

  <table><tr><td bgcolor="black"><font color="white" size="3" face="Weibei SC">Swift闭包<br>   概念：闭包(Closures)是自包含的功能代码块，可以在代码中使用或者用来作为参数传值。<br>   Swift中的闭包与c和oc中的代码块(blocks)以及其他一些编程语言中的匿名函数比较相似。<br>   全局函数和嵌套函数其实就是特殊的闭包<br>   </font></td></tr></table>


</li>
</ul>
<ul>
<li><p><font color="red" size="4" face="Weibei SC">闭包的形式有：</font></p>
<table><tr><td bgcolor="black"><font color="white" size="3" face="Weibei SC">     1，全局函数：有名字但不能捕获任何值。<br>   2，嵌套函数：有名字，也能捕获封闭函数内的值。<br>   3，闭包表达式：无名闭包，使用轻量级语法，可以根据上下文环境捕获值。<br></font></td></tr></table>
</li>
<li><p><font color="red" size="4" face="Weibei SC">Swift中的闭包有很多优化的地方：</font></p>
<table><tr><td bgcolor="black"><font color="white" size="3" face="Weibei SC">     1，根据上下文推断参数和返回值的类型<br>   2，从单行表达式闭包中隐式返回（也就是闭包体中只有一行代码，可以省略return）<br>   3，可以使用简化参数名，如$0,$1(从0开始，表示第i个参数…)<br>   4，提供了尾随闭包语法（Trailing closure syntax）<br></font></td></tr></table>
</li>
<li><font color="red" size="4" face="Weibei SC">语法：</font>

<ul>
<li><font color="red" size="4" face="Weibei SC">1，以下定义了一个接收参数并返回指定类型的闭包语法：(闭包语法即闭包公式，所有闭包都套用公式。)<br></font><table><tr><td bgcolor="778899"><font color="white" size="3" face="Weibei SC">{<br>     &nbsp;&nbsp;&nbsp;(parameters) -&gt; return type in<br>     &nbsp;&nbsp;&nbsp;statements<br>}<br></font></td></tr></table></li>
<li><font color="red" size="4" face="Weibei SC">2，以闭包形式接收两个参数并返回布尔值：<br></font><table><tr><td bgcolor="778899"><font color="white" size="3" face="Weibei SC">{<br>     &nbsp;&nbsp;&nbsp;(Int, Int) -&gt; Bool in<br>     &nbsp;&nbsp;&nbsp;Statement1<br>&nbsp;&nbsp;&nbsp;…<br>}<br></font></td></tr></table> 






</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Swift3.0语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 基础语法以及使用细节 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[百度云限速破解]]></title>
      <url>/2017/10/06/%E7%99%BE%E5%BA%A6%E4%BA%91%E9%99%90%E9%80%9F%E7%A0%B4%E8%A7%A3/</url>
      <content type="html"><![CDATA[<blockquote>
<h1 id="1，下载需要的文件。链接-http-pan-baidu-com-s-1hr3ERFe-密码-97nq"><a href="#1，下载需要的文件。链接-http-pan-baidu-com-s-1hr3ERFe-密码-97nq" class="headerlink" title="1，下载需要的文件。链接:http://pan.baidu.com/s/1hr3ERFe  密码:97nq"></a>1，下载需要的文件。<br>链接:<a href="http://pan.baidu.com/s/1hr3ERFe" target="_blank" rel="external">http://pan.baidu.com/s/1hr3ERFe</a>  密码:97nq</h1></blockquote>
<p><br></p>
<blockquote>
<h1 id="2，打开下载的-dmg文件"><a href="#2，打开下载的-dmg文件" class="headerlink" title="2，打开下载的.dmg文件"></a>2，打开下载的.dmg文件</h1></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-b082502475e26201.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><br></p>
<blockquote>
<h1 id="3-将chrome-crx拖入谷歌的插件中"><a href="#3-将chrome-crx拖入谷歌的插件中" class="headerlink" title="3,将chrome.crx拖入谷歌的插件中"></a>3,将chrome.crx拖入谷歌的插件中</h1></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">注意：如果不能拖入，先把Chrome.crx解压，然后拖入。</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-4b41422642a5521f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="http://upload-images.jianshu.io/upload_images/1358091-001ac73ccb695914.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="导入后显示网盘助手.png"></p>
<hr>
<p><br></p>
<blockquote>
<h1 id="4，打开APP-Aria2GUI-，然后不需要操作。"><a href="#4，打开APP-Aria2GUI-，然后不需要操作。" class="headerlink" title="4，打开APP(Aria2GUI)，然后不需要操作。"></a>4，打开APP(Aria2GUI)，然后不需要操作。</h1></blockquote>
<hr>
<p><br></p>
<blockquote>
<h1 id="5，谷歌网页打开百度网盘，选中要下载的文件，我们会发现我的设备旁边多了个导出下载，选择ARIA2-RPC下载即可。"><a href="#5，谷歌网页打开百度网盘，选中要下载的文件，我们会发现我的设备旁边多了个导出下载，选择ARIA2-RPC下载即可。" class="headerlink" title="5，谷歌网页打开百度网盘，选中要下载的文件，我们会发现我的设备旁边多了个导出下载，选择ARIA2 RPC下载即可。"></a>5，谷歌网页打开百度网盘，选中要下载的文件，我们会发现我的设备旁边多了个导出下载，选择ARIA2 RPC下载即可。</h1></blockquote>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/1358091-865c7f5f58b483d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></h2><p><br></p>
<blockquote>
<h1 id="6，由于下载的东西太多，截图时候网速变慢了，快的时候达到了7M-s，和家里的网速有关。"><a href="#6，由于下载的东西太多，截图时候网速变慢了，快的时候达到了7M-s，和家里的网速有关。" class="headerlink" title="6，由于下载的东西太多，截图时候网速变慢了，快的时候达到了7M/s，和家里的网速有关。"></a>6，由于下载的东西太多，截图时候网速变慢了，快的时候达到了7M/s，和家里的网速有关。</h1></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-c3ae6c65fefc7752.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
]]></content>
      
        <categories>
            
            <category> Mac软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mac软件(破解) </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[iOS11适配]]></title>
      <url>/2017/09/29/iOS11%E9%80%82%E9%85%8D/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="1，运行项目在iphoneX，发现没有充满屏幕，上下会有黑色区域，这是因为没有设置对应的启动图（尺寸：1125-2436）"><a href="#1，运行项目在iphoneX，发现没有充满屏幕，上下会有黑色区域，这是因为没有设置对应的启动图（尺寸：1125-2436）" class="headerlink" title="1，运行项目在iphoneX，发现没有充满屏幕，上下会有黑色区域，这是因为没有设置对应的启动图（尺寸：1125*2436）"></a>1，运行项目在iphoneX，发现没有充满屏幕，上下会有黑色区域，这是因为没有设置对应的启动图（尺寸：1125*2436）</h3></blockquote>
<hr>
<blockquote>
<h3 id="2，-available-iOS-9-0-的作用"><a href="#2，-available-iOS-9-0-的作用" class="headerlink" title="2，@available(iOS 9.0,*)的作用"></a>2，<a href="http://www.jianshu.com/p/99efa0236f3c" target="_blank" rel="external">@available(iOS 9.0,*)的作用</a></h3></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">作用：可以判断不同平台和系统。oc中通常在<span class="keyword">if</span>(<span class="keyword">while</span>,guard等)判断语句中,判断系统版本。</div><div class="line">参数<span class="number">1</span>：iOS <span class="number">9.0</span>表示只有<span class="number">9.0</span>以上的系统才为真</div><div class="line">参数<span class="number">2</span>：*表示在所有平台下</div><div class="line"></div><div class="line">    <span class="comment">//如果是iOS11以上的系统</span></div><div class="line">    <span class="keyword">if</span> (@available(iOS <span class="number">11.0</span>, *)) &#123;</div><div class="line">        </div><div class="line">        _tableV.contentInsetAdjustmentBehavior = <span class="built_in">UIScrollViewContentInsetAdjustmentNever</span>;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">UI_IS_IPHONE11</span>) &#123;</div><div class="line">            <span class="comment">//iPhone X导航高度为88</span></div><div class="line">            _tableV.contentInset = <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">64</span>+<span class="number">24</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//iphoneX,导航高度增加了24，高88</span></div><div class="line">        &#125;<span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="comment">//除iPhone X之外的设备（导航高度为64）</span></div><div class="line">            _tableV.contentInset = <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">64</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//iphoneX,导航高度增加了24，高88</span></div><div class="line">        &#125;</div><div class="line">        _tableV.scrollIndicatorInsets = _tableV.contentInset;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<blockquote>
<h3 id="3-iphoneX屏幕分辨率和实际尺寸"><a href="#3-iphoneX屏幕分辨率和实际尺寸" class="headerlink" title="3, iphoneX屏幕分辨率和实际尺寸"></a>3, iphoneX屏幕分辨率和实际尺寸</h3></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iphoneX的实际尺寸为：375 x 821</div><div class="line">屏幕分辨率：1125 x 2436</div></pre></td></tr></table></figure>
<blockquote>
<h3 id="4-iphoneX的导航高度"><a href="#4-iphoneX的导航高度" class="headerlink" title="4,iphoneX的导航高度"></a>4,iphoneX的导航高度</h3></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1，iphoneX的导航高度为88，比原来高了24</div><div class="line">2，其他机型的导航高度为64</div></pre></td></tr></table></figure>
<blockquote>
<h3 id="5，UITabbar复用问题，就是点击两次tabbar才可以正常选中。"><a href="#5，UITabbar复用问题，就是点击两次tabbar才可以正常选中。" class="headerlink" title="5，UITabbar复用问题，就是点击两次tabbar才可以正常选中。"></a>5，UITabbar复用问题，就是点击两次tabbar才可以正常选中。</h3></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">解决方案1：</div><div class="line">一般我们在viewWillAppear和viewDidAppear中发送通知移除系统的tabbar,</div><div class="line">在iPhone X和iPhone 8手机上iOS11系统，出现了问题，然后在发送通知的时候延迟了0.5s可以解决。</div></pre></td></tr></table></figure>
<blockquote>
<h3 id="在xcode9下，使用WKWebView崩溃。"><a href="#在xcode9下，使用WKWebView崩溃。" class="headerlink" title="在xcode9下，使用WKWebView崩溃。"></a>在xcode9下，使用WKWebView崩溃。</h3></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">解决方法:</div><div class="line"><span class="comment">//实现下面代理方法，并return。</span></div><div class="line">- (<span class="keyword">void</span>)webView:(<span class="built_in">WKWebView</span> *)webView</div><div class="line">didFailNavigation:(<span class="built_in">WKNavigation</span> *)navigation</div><div class="line">      withError:(<span class="built_in">NSError</span> *)error &#123;</div><div class="line">    <span class="comment">// ……</span></div><div class="line">    <span class="comment">// Xcode 升级到9后 WKWebViewJavascriptBridge.m 中有个 bug</span></div><div class="line">    <span class="comment">// 需要在这个方法得最后加上 return，否则崩溃。</span></div><div class="line">    <span class="comment">// 不升级 Xcode 的话，没问题。</span></div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> oc语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 适配(屏幕、系统) </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[开启适配不同版本的启动图]]></title>
      <url>/2017/09/29/%E5%BC%80%E5%90%AF%E9%80%82%E9%85%8D%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E7%9A%84%E5%90%AF%E5%8A%A8%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1358091-08e706b1b7bbcb63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="开启适配"></p>
]]></content>
      
        <categories>
            
            <category> oc语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 启动图 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[开启storyboard或者xib约束]]></title>
      <url>/2017/09/29/%E5%BC%80%E5%90%AFstoryboard%E6%88%96%E8%80%85xib%E7%BA%A6%E6%9D%9F/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1358091-2ecc6af4138eee2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
]]></content>
      
        <categories>
            
            <category> oc语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> storyboard </tag>
            
            <tag> xib </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[错误：library not found for -lAFNetworking  <br/> clang: error: linker command failed with exit code 1 (use -v to see invocation)]]></title>
      <url>/2017/09/29/%E9%94%99%E8%AF%AF2/</url>
      <content type="html"><![CDATA[<blockquote>
<h3 id="1-如果是cocoapods安装的AFNetworking，那么先pod-install一下。"><a href="#1-如果是cocoapods安装的AFNetworking，那么先pod-install一下。" class="headerlink" title="1,如果是cocoapods安装的AFNetworking，那么先pod install一下。"></a>1,如果是cocoapods安装的AFNetworking，那么先pod install一下。</h3></blockquote>
<hr>
<blockquote>
<h3 id="2，有些项目只支持64位，不支持32位，所以导致真机可以，模拟器不可以运行"><a href="#2，有些项目只支持64位，不支持32位，所以导致真机可以，模拟器不可以运行" class="headerlink" title="2，有些项目只支持64位，不支持32位，所以导致真机可以，模拟器不可以运行"></a>2，有些项目只支持64位，不支持32位，所以导致真机可以，模拟器不可以运行</h3><p><img src="http://upload-images.jianshu.io/upload_images/1358091-4bfb99e7d998a639.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="有些项目只支持64位，不支持32位，所以导致真机可以，模拟器不可以运行"></p>
</blockquote>
<hr>
<blockquote>
<h3 id="3-在Library-Search-Paths中进行设置"><a href="#3-在Library-Search-Paths中进行设置" class="headerlink" title="3, 在Library Search Paths中进行设置"></a>3, 在Library Search Paths中进行设置</h3></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">在 Search Paths 中 Library Search Paths 添加</div><div class="line"></div><div class="line"><span class="string">"$PODS_CONFIGURATION_BUILD_DIR/AFNetworking"</span></div><div class="line"></div><div class="line">——注意：——</div><div class="line">如果Library Search Paths 无 $(inherited) 项，要记得添加 $(inherited)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> oc语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 报错集合 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[错误：xxx.bundle format unrecognized, invalid, or unsuitable]]></title>
      <url>/2017/09/28/%E9%94%99%E8%AF%AF1/</url>
      <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1358091-e7b8f5f2862a9b42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解决方案"></p>
]]></content>
      
        <categories>
            
            <category> oc语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 报错集合 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UITableView常见操作]]></title>
      <url>/2017/09/26/UITableView/</url>
      <content type="html"><![CDATA[<blockquote>
<h5 id="方法一：设置section中title（颜色）以及所在view的背景色"><a href="#方法一：设置section中title（颜色）以及所在view的背景色" class="headerlink" title="方法一：设置section中title（颜色）以及所在view的背景色"></a>方法一：设置section中title（颜色）以及所在view的背景色</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#1，设置section中title（颜色）以及所在view的背景色</span></div><div class="line">-(<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView willDisplayHeaderView:(<span class="built_in">UIView</span> *)view forSection:(<span class="built_in">NSInteger</span>)section</div><div class="line"></div><div class="line">&#123;</div><div class="line">    </div><div class="line">    <span class="built_in">UITableViewHeaderFooterView</span> *header = (<span class="built_in">UITableViewHeaderFooterView</span> *)view;</div><div class="line">    </div><div class="line">    header.textLabel.textColor = [<span class="built_in">UIColor</span> redColor];</div><div class="line">    </div><div class="line">    header.contentView.backgroundColor = [<span class="built_in">UIColor</span> yellowColor];</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法二：索引的颜色以及背景色"><a href="#方法二：索引的颜色以及背景色" class="headerlink" title="方法二：索引的颜色以及背景色"></a>方法二：索引的颜色以及背景色</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">更改索引的背景颜色:</div><div class="line"></div><div class="line"><span class="keyword">self</span>.tableView.sectionIndexBackgroundColor = [<span class="built_in">UIColor</span> clearColor]; </div><div class="line">更改索引的文字颜色:</div><div class="line"></div><div class="line"><span class="keyword">self</span>.tableView.sectionIndexColor = [<span class="built_in">UIColor</span> blueColor];</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法三：分割线到头"><a href="#方法三：分割线到头" class="headerlink" title="方法三：分割线到头"></a>方法三：分割线到头</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">        <span class="comment">//分割线</span></div><div class="line"><span class="comment">//        [cell setSeparatorInset:UIEdgeInsetsZero];</span></div><div class="line"><span class="comment">//        [cell setPreservesSuperviewLayoutMargins:NO];</span></div><div class="line"><span class="comment">//        [cell setLayoutMargins:UIEdgeInsetsZero];</span></div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法四：侧滑删除"><a href="#方法四：侧滑删除" class="headerlink" title="方法四：侧滑删除"></a>方法四：侧滑删除</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark - TableView代理方法</span></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 只要实现这个方法，左划cell出现删除按钮的功能就有了</span></div><div class="line"><span class="comment"> * 用户提交了添加（点击了添加按钮）\删除（点击了删除按钮）操作时会调用</span></div><div class="line"><span class="comment"> */</span></div><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView commitEditingStyle:(<span class="built_in">UITableViewCellEditingStyle</span>)editingStyle forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (editingStyle == <span class="built_in">UITableViewCellEditingStyleDelete</span>) &#123;  <span class="comment">// 点击了“删除”</span></div><div class="line">        <span class="comment">// 删除模型</span></div><div class="line">        [<span class="keyword">self</span>.deals removeObjectAtIndex:indexPath.row];</div><div class="line">        </div><div class="line">        <span class="comment">// 刷新表格</span></div><div class="line">        [<span class="keyword">self</span>.tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:<span class="built_in">UITableViewRowAnimationLeft</span>];</div><div class="line">        </div><div class="line"></div><div class="line">    &#125; </div><div class="line">        <span class="comment">//开启编辑模式指定返回编辑类型为UITableViewCellEditingStyleInsert，点击+会走这里</span></div><div class="line">        <span class="comment">//else if (editingStyle == UITableViewCellEditingStyleInsert) &#123; // 点击了+</span></div><div class="line">        <span class="comment">//NSLog(@"+++++ %zd", indexPath.row);</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//该方法返回的是你左滑时候出现的文字提示。</span></div><div class="line">-(<span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="string">@"删除"</span>;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="tableview系统侧滑删除按钮修改"><a href="#tableview系统侧滑删除按钮修改" class="headerlink" title="tableview系统侧滑删除按钮修改"></a>tableview系统侧滑删除按钮修改</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="number">81</span>,tableview系统侧滑删除按钮修改</div><div class="line"></div><div class="line"><span class="comment">//在自定义的cell中，重写该方法。</span></div><div class="line">- (<span class="keyword">void</span>)layoutSubviews&#123;</div><div class="line">    [<span class="keyword">super</span> layoutSubviews];</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">UIView</span> *subView <span class="keyword">in</span> <span class="keyword">self</span>.subviews) &#123;</div><div class="line">        <span class="keyword">if</span>([subView isKindOfClass:<span class="built_in">NSClassFromString</span>(<span class="string">@"UITableViewCellDeleteConfirmationView"</span>)]) &#123;</div><div class="line">            <span class="comment">// 拿到subView之后再获取子控件</span></div><div class="line">            <span class="built_in">UIView</span> *deleteConfirmationView = subView.subviews[<span class="number">0</span>];</div><div class="line">            <span class="keyword">for</span> (<span class="built_in">UIView</span> *deleteView <span class="keyword">in</span> deleteConfirmationView.subviews) &#123;</div><div class="line">                <span class="built_in">UIImageView</span> *deleteImage = [[<span class="built_in">UIImageView</span> alloc] init];</div><div class="line">                deleteImage.contentMode = <span class="built_in">UIViewContentModeScaleAspectFit</span>;</div><div class="line">                <span class="comment">//Delete为图片</span></div><div class="line">                deleteImage.image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"Delete"</span>];</div><div class="line">                deleteImage.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, deleteView.frame.size.width, deleteView.frame.size.height);</div><div class="line">                [deleteView addSubview:deleteImage];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="编辑模式（新增或者删除）"><a href="#编辑模式（新增或者删除）" class="headerlink" title="编辑模式（新增或者删除）"></a>编辑模式（新增或者删除）</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-e5c4c93d6c0e4c55.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入编辑模式的点方法为：self.tableView.editing = YES;
注意:另一种set方法为：[self.tableView setEditing:!self.tableView.isEditing animated:YES];
区别：set方法可以设置是否添加动画效果，体验更好。"></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#点击左侧的+或-，会走上面的commitEditingStyle方法。</span></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 这个方法决定了编辑模式时，每一行的编辑类型：insert（+按钮）、delete（-按钮）</span></div><div class="line"><span class="comment"> */</span></div><div class="line">- (<span class="built_in">UITableViewCellEditingStyle</span>)tableView:(<span class="built_in">UITableView</span> *)tableView editingStyleForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line">&#123;</div><div class="line">    <span class="comment">//偶数行：增加    奇数行：删除</span></div><div class="line">    <span class="keyword">return</span> indexPath.row % <span class="number">2</span> == <span class="number">0</span>? <span class="built_in">UITableViewCellEditingStyleInsert</span> : <span class="built_in">UITableViewCellEditingStyleDelete</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法五：cell的选中样式"><a href="#方法五：cell的选中样式" class="headerlink" title="方法五：cell的选中样式"></a>方法五：cell的选中样式</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-6930ecffb46cbdc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<blockquote>
<h5 id="方法六：cell自适应高度之：cell调用方法的顺序"><a href="#方法六：cell自适应高度之：cell调用方法的顺序" class="headerlink" title="方法六：cell自适应高度之：cell调用方法的顺序"></a>方法六：cell自适应高度之：cell调用方法的顺序</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>,先调用多次这个方法。-(<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line"><span class="number">2</span>,- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath</div><div class="line"><span class="meta">#按照1、2的顺序，我们就在heightForRowAtIndexPath中拿不到Cell中计算的高度了。</span></div><div class="line"></div><div class="line"><span class="meta">#解决方案：</span></div><div class="line"></div><div class="line"><span class="comment">//前提：</span></div><div class="line"><span class="meta">#要使用iOS6.0中的dequeueReusableCellWithIdentifier:方法，不注册的话需要判断cell是否为空。</span></div><div class="line">使用dequeueReusableCellWithIdentifier:</div><div class="line">forIndexPath:方法，一定会返回单元格，不用判断cell是否为空。如果不存在，会自动帮我们创建。但是呢，有个弊端，使用这个方法加上下面的预估高度方法，还是会先走heightForRowAtIndexPath方法然后走cellForRowAtIndexPath方法。</div><div class="line"></div><div class="line"><span class="comment">//步骤</span></div><div class="line"><span class="meta">#1，加上个预估高度，使用estimatedRowHeight属性设置（推荐）或者使用代理方法estimatedHeightForRowAtIndexPath。。</span></div><div class="line"><span class="meta">#2，加上预估高度方法，这样系统会先走这个方法，系统知道有个大概高度，就会先走cellForRowAtIndexPath方法，最后再走heightForRowAtIndexPath方法返回准确的高度。</span></div></pre></td></tr></table></figure>
<hr>
<blockquote>
<h5 id="方法七：为什么需要强制布局然后再获取最下面一个控件的高度？"><a href="#方法七：为什么需要强制布局然后再获取最下面一个控件的高度？" class="headerlink" title="方法七：为什么需要强制布局然后再获取最下面一个控件的高度？"></a>方法七：为什么需要强制布局然后再获取最下面一个控件的高度？</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">虽然先走的cellForRowAtIndexPath方法，然后再走heightForRowAtIndexPath。</div><div class="line">但是呢，cellForRowAtIndexPath方法中的cell内容可能还没有加载完数据，</div><div class="line">这时就已经走heightForRowAtIndexPath方法，导致高度不正确。</div><div class="line"></div><div class="line"><span class="meta">#解决方案:</span></div><div class="line"><span class="meta">#在cellforrow中model的set方法中，cell强制布局一下，</span></div><div class="line"><span class="meta">#然后再获取cell最下面一个控件的高度，然后记录到model中</span></div><div class="line"><span class="meta">#[cell layoutIfNeeded];//强制布局</span></div><div class="line"><span class="meta">#status.cellHeight = CGRectGetMaxY(self.jq_contentlbl.frame);//获取并记录高度</span></div><div class="line"><span class="meta">#注意：强制布局是UI界面上的布局所以不会耗性能。</span></div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为："><a href="#方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为：" class="headerlink" title="方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为："></a>方法八：tableview的stype设置为组类型的时候，section的头部和尾部会有一定的高度。去掉高度的方式为：</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">heightForHeaderInSection、heightForFooterInSection、heightForRowAtIndexPath中不能返回<span class="number">0</span>或者<span class="number">0.0</span>。</div><div class="line"><span class="meta">#至少要有值，比如：0.01</span></div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。"><a href="#方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。" class="headerlink" title="方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。"></a>方法九：不要在设置头部view或者尾部view，还有section的头部和尾部view中，直接创建view。</h5></blockquote>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#设置tableview的头部和尾部：应该使用懒加载的方式展示头部或者尾部view，</span></div><div class="line">不然，每次滚动的时候都会重新创建，这样就会卡顿，耗性能。</div><div class="line"></div><div class="line"><span class="meta">#设置section的头部和尾部view，应该每次都需要创建，</span></div><div class="line">因为每个section都有头部和尾部view，内部会自动复用！</div></pre></td></tr></table></figure>
<blockquote>
<h5 id="方法十：删除前两条数据"><a href="#方法十：删除前两条数据" class="headerlink" title="方法十：删除前两条数据"></a>方法十：删除前两条数据</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-18d0b92ab3c216e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<blockquote>
<h5 id="方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。"><a href="#方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。" class="headerlink" title="方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。"></a>方法十一：调用reloadData刷新的时候，不能在子线程中调用，会没效果。只能在主线程中调用reloadData。</h5></blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-f16333f8189f95cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="方法十二："></p>
<blockquote>
<h5 id="方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。"><a href="#方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。" class="headerlink" title="方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。"></a>方法十三：设置cell底部的分割线为一张图片的时候，底部约束要设置为-1，而不应该设置为0，因为cell的底部默认是有一条高度为1的分割线存在的。</h5></blockquote>
<hr>
<blockquote>
<h5 id="方法十四：关闭tableview的弹性"><a href="#方法十四：关闭tableview的弹性" class="headerlink" title="方法十四：关闭tableview的弹性"></a>方法十四：关闭tableview的弹性</h5><pre><code>self.myTableView.bounces = false;
</code></pre></blockquote>
<hr>
<blockquote>
<h5 id="方法十五：使用storyboard注意点："><a href="#方法十五：使用storyboard注意点：" class="headerlink" title="方法十五：使用storyboard注意点："></a>方法十五：使用storyboard注意点：</h5><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>，背景图是一张图片时候，图片不能太大，如果太大，而且使用了自动布局，那么cell的高度就会适应图片的大小，导致cell高度不准确。</div><div class="line"><span class="number">2</span>，storyboard中的tableview或者其他控件一定要拖拽，而且保证拖拽的线是对的，否则可能会自动识别到别的sb中，还不报错，我擦，无语。</div></pre></td></tr></table></figure>
</blockquote>
<hr>
<blockquote>
<h4 id="方法十六：点击cell中的按钮，触发一些操作"><a href="#方法十六：点击cell中的按钮，触发一些操作" class="headerlink" title="方法十六：点击cell中的按钮，触发一些操作"></a>方法十六：点击cell中的按钮，触发一些操作</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">注意：虽然点击cell中的按钮，但是还是会走cellForRowAtIndexPath方法，而且model也就是点击按钮所在的行的model。</div><div class="line">所以，除非要用cell中控件，那么我们可以直接在按钮的点击事件中操作当前行的model即可。</div></pre></td></tr></table></figure>
</blockquote>
<hr>
<blockquote>
<h4 id="方法十七：cell显示全部和展示部分"><a href="#方法十七：cell显示全部和展示部分" class="headerlink" title="方法十七：cell显示全部和展示部分"></a>方法十七：cell显示全部和展示部分</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">之前可能已经提到过，点击cell中的按钮，会走cellforrow方法，也就是当前点击按钮所在的cell，那么只需要写个block回调就可以了。</div></pre></td></tr></table></figure>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-bedf76368e23faad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="showBtnMethod：就是按钮的点击方法"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1358091-97eac12a0182a4c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cellForRowAtIndexPath：方法"></p>
]]></content>
      
        <categories>
            
            <category> oc语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> UITableview </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/09/26/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
